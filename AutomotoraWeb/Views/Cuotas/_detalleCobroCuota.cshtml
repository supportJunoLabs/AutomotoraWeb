@model DLL_Backend.TRCuotaCobro
@using AutomotoraWeb.Helpers;
@using DLL_Backend;
@using AutomotoraWeb.Models;


<div style="margin-top: 10px">
    @Html.Partial("_grillacuotasVigentes", Model.Venta.Financiacion.CuotasVigentes)
</div>

@{ CuotaCobroSugerido sug = null;
   if (Model.Tipo == TRCuotaCobro.TIPO.CONJUNTO) {
       sug = Model.Venta.Financiacion.CobroSugerido();
   } else {
       sug = Model.Venta.Financiacion.ProximaCuota().CobroSugerido();
   }
   bool cambiarSucursal = ViewBag.Multisucursal;
}
<div id="cuotaPago">
    <div class="floatLeft">
        <div class="dataLine">
            <div class="display-label renglon-alto">
                @{ if (Model.Tipo != TRCuotaCobro.TIPO.CONJUNTO) {
                    <span>Proxima Cuota</span>
                   } else {
                    <span>Cuotas Pendientes</span>
                   }}
            </div>
            <div class="editor-field editor-field-mini renglon-alto">
                @{ if (Model.Tipo != TRCuotaCobro.TIPO.CONJUNTO) {
                    <input id="cuota" value= '@sug.NumeroCuota' disabled="disabled"  />
                   } else {
                    <input id="cuotas" value= '@sug.CantCuotas' disabled="disabled"  />
                   }}
            </div>

        </div>
        <div class="clear-both"></div>

        <div class="dataLine">
            <div class="display-label">
                @{ if (Model.Tipo != TRCuotaCobro.TIPO.CONJUNTO) {
                    <span>Importe Cuota</span>
                   } else {
                    <span>Importe Pendiente</span>
                   }}
            </div>
            <div class="editor-field editor-field-medium renglon-alto">
                <input id="importeorig" value= '@sug.ImporteCuota.ImporteTexto' disabled="disabled"  />
            </div>
        </div>
        <div class="clear-both"></div>

        <div class="dataLine">
            <div class="display-label">
                @{ if (Model.Tipo != TRCuotaCobro.TIPO.CONJUNTO) {
                    <span>Vencimiento Cuota</span>
                   } else {
                    <span>Vencimiento Ultima</span>
                   }}
            </div>
            <div class="editor-field editor-field-medium renglon-alto">
                <input id="vto" value= '@sug.Vencimiento.ToString("dd/MM/yyyy")' disabled="disabled"  />
            </div>
        </div>
        <div class="clear-both"></div>

        <div class="dataLine">
            <div class="display-label">
                Pagos a Cuenta
            </div>
            <div class="editor-field editor-field-medium renglon-alto">
                <input id="acuenta" value= '@sug.PagosACuenta.ImporteTexto' disabled="disabled"  />
                @{if (sug.FechaPagosAcuenta != null) {
                    <input id="facuenta" value= '@((sug.FechaPagosAcuenta ?? (DateTime.Now)).ToString("dd/MM/yyyy"))' disabled="disabled"  />
                  }}
            </div>
        </div>
        <div class="clear-both"></div>

    </div>
    <div class="floatLeft" style="margin-left: 30px">
        <div class="dataLine">
            <div class="display-label">
                Fecha Cobro
            </div>
            <div class="editor-field editor-field-medium">
                @{ if (Automotora.AdmiteOtrasFechas()) {
                    @Html.TextBoxFor(model => model.Fecha, "{0:dd/MM/yyyy}", new { @class = "calendarAW" })
                    @Html.ValidationMessageFor(model => model.Fecha)
                   } else {
                    <input id="fcobro" value= '@((Model.Fecha).ToString("dd/MM/yyyy"))' disabled="disabled"  />
                   }}
            </div>
        </div>
        <div class="clear-both"></div>
        <div class="dataLine">
            <div class="display-label">
                Intereses
            </div>
            <div class="editor-field editor-field-medium renglon-alto">
                <input id="intereses" value= '@sug.Intereses.ImporteTexto' disabled="disabled"  />
            </div>
        </div>
        <div class="clear-both"></div>

        <div class="dataLine">

            <div class="display-label">
                Importe Calculado
            </div>
            <div class="editor-field editor-field-medium renglon-alto">
                <input id="calculado" value= '@sug.CobroSugerido.ImporteTexto' disabled="disabled"  />
            </div>
        </div>
        <div class="clear-both"></div>

      

        <div class="dataLine">
            <div class="display-label">
                @Html.LabelForRequired(model => model.Sucursal)
            </div>
            <div class="editor-field editor-field-medium medium renglon-alto">
                @Html.DdlOrDisplayFor(model => model.Sucursal.Codigo, !cambiarSucursal, model => model.Sucursal.Nombre,
                new SelectList(ViewBag.Sucursales, "Codigo", "Nombre"), null,
                new { id = "ddlSucursales", @class = "medium" })
                @Html.ValidationMessageFor(model => model.Sucursal)
            </div>
        </div>
        <div class="clear-both"></div>

    </div>
    <div class="clear-both"></div>

      @{ if (Model.Tipo == TRCuotaCobro.TIPO.CONJUNTO) {
            <div class="dataLine">
                <div class="display-label">
                    Cuotas Cobrar
                </div>
                <div class="editor-field editor-field-medium alinearDerecha">
                    @Html.TextBoxFor(model => model.cantCuotas)
                    @Html.ValidationMessageFor(model => model.cantCuotas)
                </div>
            </div>
            <div class="clear-both"></div>
           }}

        <div class="dataLine">
            <div class="display-label">
                Cobro @sug.CobroSugerido.Moneda.Simbolo
            </div>
            <div class="editor-field editor-field-medium alinearDerecha">
                @Html.TextBoxFor(model => model.Importe.Monto)
                @Html.ValidationMessageFor(model => model.Importe.Monto)
            </div>
        </div>
        <div class="clear-both"></div>

    <div class="dataLine">
        <div class="display-label ">
            @Html.LabelForRequired(model => model.Observaciones)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.TextBoxFor(model => model.Observaciones)
            @Html.ValidationMessageFor(model => model.Observaciones)

        </div>
    </div>
    <div class="clear-both"></div>
    <div class="btn-toolbar">
        <div class="floatRight">
            @(Html.Bootstrap().SubmitButton().Class("btn btn-primary icon-save").Text(" Registrar Pago"))
        </div>
    </div>
    <div class="clear-both"></div>
</div>


<script type="text/javascript">
    function OnBeginCallbackCuotas(s, e) {
        e.customArgs["idSession"] = $('#idSession').val();
    }

    $('#cantCuotas').change(function () {
       
        var idSession = $('#idSession').val();
        var cantCuotas = $('#cantCuotas').val().toString();
        var destino = '@(Url.Action("CantCuotasChanged", "Cuotas"))';
        //alert(destino);
        $.ajax({
            cache: false,
            url: destino,
            type: 'GET',
            async: true,
            data: { "cantCuotas": cantCuotas, "idSession": idSession },
            success: function (data) {
                nuevaCantCuotas(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                general_showErrorPopup(xhr, ajaxOptions, thrownError, destino);
            },
            beforeSend: showLoading,
            complete: hideLoading
        });
    });

    function nuevaCantCuotas(data) {
        //alert("here");
        if (data.Result == "OK") {
            $("#intereses").val(data.Intereses);
            $("#calculado").val(data.ImporteCalculado);
            $("#Importe_Monto").val(data.Importe);
        }else {
            general_showAvisoPopup("Error al recalcular: " + data.ErrorCode + " | " + data.ErrorMessage);
        }
    }

</script>
