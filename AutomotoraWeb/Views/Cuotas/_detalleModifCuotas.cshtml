@model DLL_Backend.TRRefinanciacion
@using AutomotoraWeb.Helpers;
@using DLL_Backend;

@{
    bool cambiarSucursal = ViewBag.Multisucursal;
}

<div id="divOperacion">
    <div class="well" style="margin-top: 10px; width: 1000px; height: 1500px;">
        <ul class="nav nav-tabs">
            <li class="active"><a href="#nueva_tab" data-toggle="tab">Nueva Financiacion</a></li>
            <li><a href="#anterior_tab" data-toggle="tab">Financiacion Vigente</a></li>
        </ul>
        <div id="tabContent" class="tab-content">
            <div class="tab-pane active in" id="nueva_tab">
                <div id="divNuevaFinanciacion">
                    <div class="dataLine">
                        <div class="display-label">
                            @Html.LabelForRequired(model => model.Sucursal)
                        </div>
                        <div class="editor-field editor-field-medium medium renglon-alto">
                            @Html.DdlOrDisplayFor(model => model.Sucursal.Codigo, !cambiarSucursal, model => model.Sucursal.Nombre,
                                new SelectList(ViewBag.Sucursales, "Codigo", "Nombre"), null,
                                new { id = "ddlSucursales", @class = "medium" })
                            @Html.ValidationMessageFor(model => model.Sucursal)
                        </div>
                    </div>
                    <div class="clear-both"></div>

                    <div class="dataLine">
                        <div class="display-label ">
                            @Html.LabelForRequired(model => model.Observaciones)
                        </div>
                        <div class="editor-field editor-field-xxlarge">
                            @Html.TextBoxFor(model => model.Observaciones)
                            @Html.ValidationMessageFor(model => model.Observaciones)

                        </div>
                    </div>
                    <div class="clear-both"></div>

                    <div class="dataLine">
                        <div class="display-label ">
                            Cantidad Cuotas
                        </div>
                        <div class="editor-field editor-field-mini">
                            @Html.TextBoxFor(model => model.CantNuevasCuotas, new { id = "cantCuotas" })
                            @Html.ValidationMessageFor(model => model.CantNuevasCuotas)
                        </div>
                    </div>
                    <div class="clear-both"></div>
                    <div class="dataLine">
                        <div class="display-label ">
                            Monto Base
                        </div>
                        <div class="editor-field editor-field-small">
                            @Html.TextBoxFor(model => model.MontoBase, new { id = "montoBase" })
                            @Html.ValidationMessageFor(model => model.MontoBase)
                        </div>
                    </div>
                    <div class="clear-both"></div>
                    <div class="dataLine">
                        <div class="display-label">
                            Fecha Primera
                        </div>
                        <div class="editor-field editor-field-small">
                            @Html.TextBoxFor(model => model.FechaBase, "{0:dd/MM/yyyy}", new { @class = "calendarAW", id = "fechaBase" })
                            @Html.ValidationMessageFor(model => model.FechaBase)
                        </div>
                    </div>

                    <div style="margin-left:50px" class="floatLeft">
                        @(Html.Bootstrap().Button().Text("Cambiar Financiación").Id("btnCambiarFinanciacion").Style(TwitterBootstrap2.ButtonStyle.Primary))
                        <div id="messageErrorCambiarFinanciacion" style="margin-left: 15px; color: red;"></div>
                    </div>

                    <div class="clear-both"></div>

                </div>
                <div class="clear-both"></div>

                <div style="margin-top: 20px">
                    @Html.Partial("_grillaNuevasCuotas", Model.NuevasCuotas)
                </div>
                <div class="clear-both"></div>

                <div class="btn-toolbar" style="margin-top: 30px">
                    @(Html.Bootstrap().SubmitButton().Class("btn btn-primary icon-save").Text(" Confirmar Modificacion"))
                </div>
                <div class="clear-both"></div>
            </div>
            <div class="tab-pane fade" id="anterior_tab">
                <div id="divAnteriorFinanciacion">
                    <div style="margin-top: 10px">
                        @Html.Partial("_grillacuotasVigentes", Model.ViejasCuotas)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    function OnBeginCallbackCuotas(s, e) {
        e.customArgs["idSession"] = $('#idSession').val();
    }

    $("#btnCambiarFinanciacion").click(function () {
        if (_validateImporteCambiarFinanciacion()) {
            $("#messageErrorCambiarFinanciacion").html("");
            var destino = '/Cuotas/generarRefinanciacion/';
            $.ajax({
                url: destino,
                type: 'POST',
                async: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                data: getJsonParametrosRefinanciacion(),
                success: function (data) {
                    if (data.Result == "OK") {
                        grillaNuevasCuotas.Refresh(); // Se actualiza la grilla
                    } else {
                        var htmlError = "";
                        for (var i = 0; i < data.ErrorMessage.length; i++) {
                            htmlError = htmlError + "<div>" + data.ErrorMessage[i] + "</div>";
                        }
                        $("#messageErrorCambiarFinanciacion").html(htmlError);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    general_showErrorAction("messageErrorCambiarFinanciacion", textStatus, errorThrown);
                }
            });
        }else {
            $("#messageErrorCambiarFinanciacion").html("El monto debe de ser un valor numérico");
        }
    });

    function _validateImporteCambiarFinanciacion() {
        var monto = $("#montoBase").val()

        var isDecimal_re = /^\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*$/;
        return String(monto).search(isDecimal_re) != -1
    }

    function getJsonParametrosRefinanciacion() {

        //alert(3);
        var idSession = $("#idSession").val();
        //alert(4);
        var financiacion = {
            cantCuotas: parseInt($("#cantCuotas").val()),
            montoBase: parseFloat($("#montoBase").val()),
            idSession: idSession,
            fechaBase: $("#fechaBase").val()
        };
        //alert(5);

        return JSON.stringify(financiacion);
    }
</script>
