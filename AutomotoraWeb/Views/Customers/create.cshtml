@model AutomotoraWeb.Models.CustomerModel
@using AutomotoraWeb.Helpers;

@{
    ViewBag.Title = "Crear";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<span class="validation-summary-errors">@ViewBag.ErrorMessage</span>

@using (Html.BeginForm(AutomotoraWeb.Controllers.Sales.Maintenanse.CustomersController.CREATE, AutomotoraWeb.Controllers.Sales.Maintenanse.CustomersController.CUSTOMERS, FormMethod.Post)) {
    @Html.ValidationSummary(true)
    @Html.ValidationSummary("Se han producido errores:")
   
    
    <div class="espacio"/>
    
    <fieldset>
        <legend></legend>

        <div class="editor-label">
            @Html.LabelForRequired(model => model.Name)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label">
            @Html.LabelForRequired(model => model.Address)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.Address)
            @Html.ValidationMessageFor(model => model.Address)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label">
            @Html.LabelForRequired(model => model.Telephone)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.Telephone)
            @Html.ValidationMessageFor(model => model.Telephone)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label editor-date-field">
            @Html.LabelForRequired(model => model.Birthday)
        </div>
        <div class="editor-field editor-field-small">
            @Html.DevExpress().DateEdit(
                settings => {
                    settings.Name = "Birthday";
                    settings.Properties.UseMaskBehavior = true;
                    settings.Properties.EditFormat = EditFormat.Custom;
                    settings.Properties.EditFormatString = "dd/MM/yyyy";
                    settings.Height = 28;
                    settings.Date = DateTime.Today;
                }
            ).GetHtml()
            @Html.ValidationMessageFor(model => model.Birthday)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label ">
            @Html.LabelForRequired(model => model.Observations)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.TextAreaFor(model => model.Observations, new { style="width: 530px; height: 60px" })
            @Html.ValidationMessageFor(model => model.Observations)
        </div>
        <div class="clear-both"></div>



        <div class="editor-label ">
            @Html.LabelForRequired(model => model.MaritalStatus)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.DropDownListFor(model => model.MaritalStatus, new SelectList(Enum.GetValues(typeof(AutomotoraWeb.Models.CustomerModel.CustomerMaritalStatus))), new { id = "ddlMaritalStatus" })
            @Html.ValidationMessageFor(model => model.MaritalStatus)
        </div>
        <div class="clear-both"></div>



        <div class="editor-label ">
            @Html.LabelForRequired(model => model.City)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label ">
            @Html.LabelForRequired(model => model.Country)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.Country)
            @Html.ValidationMessageFor(model => model.Country)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label ">
            @Html.LabelForRequired(model => model.DocumentCI)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.DocumentCI)
            @Html.ValidationMessageFor(model => model.DocumentCI)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label ">
            @Html.LabelForRequired(model => model.DocumentCredential)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.DocumentCredential)
            @Html.ValidationMessageFor(model => model.DocumentCredential)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label ">
            @Html.LabelForRequired(model => model.DocumentTypeOther)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.DocumentTypeOther)
            @Html.ValidationMessageFor(model => model.DocumentTypeOther)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label ">
            @Html.LabelForRequired(model => model.DocumentOther)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.DocumentOther)
            @Html.ValidationMessageFor(model => model.DocumentOther)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label ">
            @Html.LabelForRequired(model => model.Fax)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.Fax)
            @Html.ValidationMessageFor(model => model.Fax)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label ">
            @Html.LabelForRequired(model => model.Rut)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.Rut)
            @Html.ValidationMessageFor(model => model.Rut)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label ">
            @Html.LabelForRequired(model => model.SocialReason)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.SocialReason)
            @Html.ValidationMessageFor(model => model.SocialReason)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label ">
            @Html.LabelForRequired(model => model.ZipCode)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.ZipCode)
            @Html.ValidationMessageFor(model => model.ZipCode)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label ">
            @Html.LabelForRequired(model => model.Telephone)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.Telephone)
            @Html.ValidationMessageFor(model => model.Telephone)
        </div>
        <div class="clear-both"></div>

        <div class="editor-label ">
            @Html.LabelForRequired(model => model.TelephoneOther)
        </div>
        <div class="editor-field editor-field-xxlarge">
            @Html.EditorFor(model => model.TelephoneOther)
            @Html.ValidationMessageFor(model => model.TelephoneOther)
        </div>
        <div class="clear-both"></div>

        <div class="espacio2"></div>

        <div id="spouseBlock" style="display: block;">
            <h3>Conyugue</h3>

            <div class="editor-label">
                @Html.LabelForRequired(model => model.Spouse.Name)
            </div>
            <div class="editor-field editor-field-xxlarge">
                @Html.EditorFor(model => model.Spouse.Name)
                @Html.ValidationMessageFor(model => model.Spouse.Name)
            </div>
            <div class="clear-both"></div>

            <div class="editor-label">
                @Html.LabelForRequired(model => model.Spouse.DocumentCI)
            </div>
            <div class="editor-field editor-field-xxlarge">
                @Html.EditorFor(model => model.Spouse.DocumentCI)
                @Html.ValidationMessageFor(model => model.Spouse.DocumentCI)
            </div>
            <div class="clear-both"></div>

            <div class="editor-label">
                @Html.LabelForRequired(model => model.Spouse.DocumentCredential)
            </div>
            <div class="editor-field editor-field-xxlarge">
                @Html.EditorFor(model => model.Spouse.DocumentCredential)
                @Html.ValidationMessageFor(model => model.Spouse.DocumentCredential)
            </div>
            <div class="clear-both"></div>

            <div class="editor-label">
                @Html.LabelForRequired(model => model.Spouse.DocumentTypeOther)
            </div>
            <div class="editor-field editor-field-xxlarge">
                @Html.EditorFor(model => model.Spouse.DocumentTypeOther)
                @Html.ValidationMessageFor(model => model.Spouse.DocumentTypeOther)
            </div>
            <div class="clear-both"></div>

            <div class="editor-label">
                @Html.LabelForRequired(model => model.Spouse.DocumentOther)
            </div>
            <div class="editor-field editor-field-xxlarge">
                @Html.EditorFor(model => model.Spouse.DocumentOther)
                @Html.ValidationMessageFor(model => model.Spouse.DocumentOther)
            </div>
            <div class="clear-both"></div>

            <div class="editor-label">
                @Html.LabelForRequired(model => model.Spouse.Nuptials)
            </div>
            <div class="editor-field editor-field-xxlarge">
                @Html.EditorFor(model => model.Spouse.Nuptials)
                @Html.ValidationMessageFor(model => model.Spouse.Nuptials)
            </div>
            <div class="clear-both"></div>

            <div class="editor-label ">
                @Html.LabelForRequired(model => model.Spouse.SeparationOfProperty)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.Spouse.SeparationOfProperty)
                @Html.ValidationMessageFor(model => model.Spouse.SeparationOfProperty)
            </div>
            <div class="clear-both"></div>

        </div>

        <div class="espacio2"></div>
        <div class="btn-toolbar">
            @(Html.Bootstrap().SubmitButton().Class("btn btn-primary icon-save").Text(" Guardar"))
            @(Html.Bootstrap().ActionLinkButton("Cancelar",AutomotoraWeb.Controllers.Sales.Maintenanse.CustomersController.SHOW,AutomotoraWeb.Controllers.Sales.Maintenanse.CustomersController.CUSTOMERS).Class("btn btn-default"))
        </div>
        
       
    </fieldset>
}

@section Scripts {

    <script type="text/javascript">

        var actualMaritalStatus = $("#ddlMaritalStatus option:selected").val()
        _showHideSpouseBlock(actualMaritalStatus);

        $("#ddlMaritalStatus").change(function () {
            var optionSelected = $(this).val();
            _showHideSpouseBlock(optionSelected);
        });

        function _showHideSpouseBlock(optionSelected){
            if (optionSelected == 'Soltero') {
                $("#spouseBlock").hide();
            }
            else {
                $("#spouseBlock").show();
            }
        }
    </script>

}


