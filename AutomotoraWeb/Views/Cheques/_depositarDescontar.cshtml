@model DLL_Backend.TRChequeDepositarDescontar
@using AutomotoraWeb.Helpers;
@using DLL_Backend;
@using AutomotoraWeb.Models;

@{
    bool cambiarSucursal = ViewBag.Multisucursal;
    bool modoConsulta=(((bool?)(ViewBag.SoloLectura))??false);
 }

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formPrincipal" })) {
   
    @Html.ValidationSummary(true)
    @Html.ValidationSummary("Se han producido errores:")

    @Html.HiddenFor(model => model.TipoDestino);
      
    <div class="display-label">
        @Html.LabelForRequired(model => model.Cheque)
    </div>
    <div class="renglon-alto editor-field-xlarge editor-gridlookup">
        <div class="floatLeft">
            @{ 
                GridLookUpModel gmodel=new GridLookUpModel { GridLookUpCodigo = Model.Cheque.Codigo };
                if (Model.TipoDestino == TRChequeDepositarDescontar.TIPO_DESTINO.DEPOSITAR) {
                     gmodel.Opciones = Cheque.ChequesDepositables();
                     @Html.Partial("_selectCheque", gmodel)
               } else {
                    gmodel.Opciones = Cheque.ChequesDescontables();
                    @Html.Partial("_selectChequeDesc", gmodel)
               }
            }
        </div>
        <div class="floatLeft" style="margin-left: 5px">
            @Html.ValidationMessageFor(model => model.Cheque.Codigo)
        </div>
       <div class="floatLeft" style="padding-left: 20px;">
            <a href="#" id="abtn_verCheque">
                  @Html.Bootstrap().Button().Class("btn btn-info btn-small").Text("Consulta Cheque").Id("btn_verCheque")
            </a>
        </div>


        @Html.HiddenFor(model => model.Cheque.Codigo, new { id = "codigoCheque" })
            </div>
    <div class="clear-both"></div>   
    
     <div>
        <div class="display-label">
            @Html.LabelForRequired(model => model.Cuenta)
        </div>
        <div class="editor-field editor-field-xlarge xxlarge editor-select">
            @Html.DdlOrDisplayFor(model => model.Cuenta.Codigo, modoConsulta, model => model.Cuenta.Nombre,
                new SelectList(ViewBag.Cuentas, "Codigo", "Nombre"), "--Seleccionar Cuenta--",
                new { id = "ddlCuentas", @class = "xxlarge" })
            @Html.ValidationMessageFor(model => model.Cuenta.Codigo)
        </div>
    </div>
    <div class="clear-both"></div>   
    
    
    <div>
        @{ if (Model.TipoDestino == TRChequeDepositarDescontar.TIPO_DESTINO.DESCONTAR) {
            <div class="display-label">
                @Html.DisplayNameFor(model => model.Importe) *
            </div>
            <div class="editor-field editor-field-small">
                @Html.DdlOrDisplayImporteFor(model => model.Importe, modoConsulta)
                @Html.ValidationMessageFor(model => model.Importe.Monto)
            </div>
            <div class="clear-both"></div>
                
           }
        }
    </div>
    
    <div class="display-label">
        @Html.LabelForRequired(model => model.NumeroComprobante)
    </div>
    <div class="editor-field editor-field-small">
        @Html.TextBoxFor(model => model.NumeroComprobante)
        @Html.ValidationMessageFor(model => model.NumeroComprobante)
    </div>
    <div class="clear-both"></div>   
    <div>
        <div class="display-label">
            @Html.LabelForRequired(model => model.Sucursal)
        </div>
        <div class="editor-field editor-field-xlarge xxlarge @(modoConsulta?"":"renglon-alto")">
            @Html.DdlOrDisplayFor(model => model.Sucursal.Codigo, modoConsulta||!cambiarSucursal, model => model.Sucursal.Nombre,
                new SelectList(ViewBag.Sucursales, "Codigo", "Nombre"), null,
                new { id = "ddlSucursales", @class = "xlarge" })
            @Html.ValidationMessageFor(model => model.Sucursal)
        </div>
    </div>
    <div class="clear-both"></div>   
    
    <div class="display-label ">
        @Html.LabelForRequired(model => model.Observaciones)
    </div>
    <div class="editor-field editor-field-xxlarge">
        @Html.TextAreaOrDisplayFor(model => model.Observaciones, (bool?)ViewBag.SoloLectura, new { style = "width: 530px; height: 60px" })
        @Html.ValidationMessageFor(model => model.Observaciones)

    </div>
    <div class="clear-both"></div>   
    
    <div class="espacio2"></div>
    <div class="btn-toolbar">
        @{ if (Model.TipoDestino == TRChequeDepositarDescontar.TIPO_DESTINO.DEPOSITAR) {
            @(Html.Bootstrap().SubmitButton().Class("btn btn-primary icon-save").Text(" Depositar Cheque"))
           } else {
            @(Html.Bootstrap().SubmitButton().Class("btn btn-primary icon-save").Text(" Descontar Cheque"))
           }
        }
    </div>
    
}


