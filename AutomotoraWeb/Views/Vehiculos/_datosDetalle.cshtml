@model DLL_Backend.Vehiculo
@using AutomotoraWeb.Helpers;
@using DLL_Backend;

@{
    bool cambiarSucursal = ViewBag.Multisucursal;
    bool modoConsulta = (((bool?)(ViewBag.SoloLectura)) ?? false);
}

@{ if (Model!=null && Model.Codigo>0){
<div class="display-label">
    @Html.LabelForRequired(model => model.Ficha)
</div>
<div class="editor-field editor-field-large renglon-alto">
    <strong>
    @Html.EditorOrDisplayFor(model => model.Ficha, true)
    </strong>
    @Html.ValidationMessageFor(model => model.Ficha)
</div>
<div class="clear-both"></div>
}}

<div class="display-label">
    @Html.LabelForRequired(model => model.Sucursal)
</div>
<div class="editor-field editor-field-large @(modoConsulta ? "" : "renglon-alto")">
    @Html.DdlOrDisplayFor(model => model.Sucursal.Codigo, modoConsulta || !cambiarSucursal,
                model => model.Sucursal.Nombre,
                new SelectList(ViewBag.Sucursales, "Codigo", "Nombre"), null, new { id = "ddlSucursal" })
    @Html.ValidationMessageFor(model => model.Sucursal)
</div>
<div class="clear-both"></div>

<div class="display-label">
    @Html.LabelForRequired(model => model.Marca)
</div>
<div class="editor-field editor-field-large">
    @Html.EditorOrDisplayFor(model => model.Marca, modoConsulta)
    @Html.ValidationMessageFor(model => model.Marca)
</div>
<div class="clear-both"></div>

<div class="display-label">
    @Html.LabelForRequired(model => model.Modelo)
</div>
<div class="editor-field editor-field-large">
    @Html.EditorOrDisplayFor(model => model.Modelo, modoConsulta)
    @Html.ValidationMessageFor(model => model.Modelo)
</div>
<div class="clear-both"></div>

<div class="display-label">
    @Html.LabelForRequired(model => model.Anio)
</div>
<div class="editor-field editor-field-small">
    @Html.EditorOrDisplayFor(model => model.Anio, modoConsulta)
    @Html.ValidationMessageFor(model => model.Anio)
</div>
<div class="clear-both"></div>

<div class="display-label">
    @Html.LabelForRequired(model => model.Matricula)
</div>
<div class="editor-field editor-field-large">
    @Html.EditorOrDisplayFor(model => model.Matricula, modoConsulta)
    @Html.ValidationMessageFor(model => model.Matricula)
</div>
<div class="clear-both"></div>

<div class="display-label ">
    @Html.LabelForRequired(model => model.Departamento)
</div>
<div class="editor-field editor-field-large">
    @Html.DdlOrDisplayFor(model => model.Departamento.Codigo, modoConsulta,
                model => model.Departamento.Nombre,
                new SelectList(ViewBag.Departamentos, "Codigo", "Nombre"), null, new { id = "ddlDepartamento" })
    @Html.ValidationMessageFor(model => model.Departamento)
</div>
<div class="clear-both"></div>


<div class="display-label">
    @Html.LabelForRequired(model => model.Color)
</div>
<div class="editor-field editor-field-large">
    @Html.EditorOrDisplayFor(model => model.Color, modoConsulta)
    @Html.ValidationMessageFor(model => model.Color)
</div>
<div class="clear-both"></div>

<div class="display-label">
    @Html.LabelForRequired(model => model.Padron)
</div>
<div class="editor-field editor-field-large">
    @Html.EditorOrDisplayFor(model => model.Padron, modoConsulta)
    @Html.ValidationMessageFor(model => model.Padron)
</div>
<div class="clear-both"></div>

<div class="display-label">
    @Html.LabelForRequired(model => model.Motor)
</div>
<div class="editor-field editor-field-large">
    @Html.EditorOrDisplayFor(model => model.Motor, modoConsulta)
    @Html.ValidationMessageFor(model => model.Motor)
</div>
<div class="clear-both"></div>

<div class="display-label">
    @Html.LabelForRequired(model => model.Chasis)
</div>
<div class="editor-field editor-field-large">
    @Html.EditorOrDisplayFor(model => model.Chasis, modoConsulta)
    @Html.ValidationMessageFor(model => model.Chasis)
</div>
<div class="clear-both"></div>

<div class="display-label">
    @Html.LabelForRequired(model => model.Kilometros)
</div>
<div class="editor-field editor-field-small">
    @Html.EditorOrDisplayFor(model => model.Kilometros, modoConsulta)
    @Html.ValidationMessageFor(model => model.Kilometros)
</div>
<div class="clear-both"></div>

<div class="display-label ">
    @Html.LabelForRequired(model => model.TipoCombustible)
</div>
<div class="editor-field editor-field-large">
    @Html.DdlOrDisplayFor(model => model.TipoCombustible.Codigo, modoConsulta,
                model => model.TipoCombustible.Descripcion,
                new SelectList(ViewBag.TiposCombustible, "Codigo", "Descripcion"), null, new { id = "ddlTipoCombustible" })
    @Html.ValidationMessageFor(model => model.TipoCombustible)
</div>
<div class="clear-both"></div>

<div class="display-label">
    @Html.LabelForRequired(model => model.FechaAdquirido)
</div>
<div class="editor-field editor-field-small">
    @Html.TextBoxOrdisplayFor(model => model.FechaAdquirido, modoConsulta, "{0:dd/MM/yyyy}", new { @class = "calendarAW" })
    @Html.ValidationMessageFor(model => model.FechaAdquirido)
</div>
@{ if (Model != null && Model.Codigo>0) {
       Pedido ped = Model.PedidoOrigen;
       if (ped != null) {
            <div class="floatLeft" style="padding-left: 20px;">
                    @(Html.Bootstrap().ActionLinkButton("Pedido Origen", "VerPedidoOrigen").RouteValues(new { id = ped.Codigo }).Class("btn-info  btn-small"))
            </div>
       }
   }
}

<div class="clear-both"></div>

<div class="display-label">
    @Html.LabelForRequired(model => model.Costo)
</div>
<div class="editor-field editor-field-small">
    @Html.DdlOrDisplayImporteFor(model => model.Costo, modoConsulta)
    @Html.ValidationMessageFor(model => model.Costo.Monto)
</div>
@{ if (Model != null && Model.Codigo > 0) {
       Venta origen = Model.ObtenerVentaOrigenPermuta();
       if (origen != null) {
            <div class="floatLeft" style="padding-left: 20px;">
                @(Html.Bootstrap().ActionLinkButton("Permuta Origen", "VerPermutaOrigen").RouteValues(new { id = origen.Codigo }).Class("btn-info  btn-small"))
            </div>
       }
   }
}
<div class="clear-both"></div>

<div class="display-label">
    @Html.LabelForRequired(model => model.Propietario)
</div>
<div class="editor-field editor-field-large">
    @Html.EditorOrDisplayFor(model => model.Propietario, modoConsulta)
    @Html.ValidationMessageFor(model => model.Propietario)
</div>
<div class="clear-both"></div>

<div class="display-label">
    @Html.LabelForRequired(model => model.TotalGastos)
</div>
<div  class="@(modoConsulta ? "" : "renglon-alto")">
    @Html.DdlOrDisplayImporteFor(model => model.TotalGastos, true)
    @Html.ValidationMessageFor(model => model.TotalGastos)
</div>
<div class="clear-both"></div>

<div class="display-label">
    @Html.LabelForRequired(model => model.PrecioVenta)
</div>
<div class="editor-field editor-field-small">
    @Html.DdlOrDisplayImporteFor(model => model.PrecioVenta, modoConsulta)
    @Html.ValidationMessageFor(model => model.PrecioVenta.Monto)
</div>
<div class="clear-both"></div>

<div class="display-label">
    @Html.LabelForRequired(model => model.DescripcionEstado)
</div>
<div  class="@(modoConsulta ? "" : "renglon-alto") floatLeft">
    @{ if (Model != null && Model.Codigo > 0) {
           <div class="editor-field floatLeft">
                @Html.EditorOrDisplayFor(model => model.DescripcionEstado, true)
            </div>
       } else {
        <div class="editor-field floatLeft">En Venta</div>
       }
    }
</div>

@{ if (Model != null && Model.Codigo > 0 && Model.TieneSeniaActiva()) {
    <div class="floatLeft " style="padding-left: 20px;">
        @(Html.Bootstrap().ActionLinkButton("Ver Seña", "VerSenia").RouteValues(new { id = Model.Codigo }).Class("btn-info  btn-small"))
    </div>
   }
    if (Model != null && Model.Codigo > 0 && Model.TieneVentaActiva()) {
    <div class="floatLeft" style="padding-left: 20px;">
        @(Html.Bootstrap().ActionLinkButton("Ver Venta", "VerVenta").RouteValues(new { id = Model.Codigo }).Class("btn-info btn-small"))
    </div>
   }

    if (Model != null && Model.Codigo > 0 && Model.TieneACV()) {
    <div class="floatLeft" style="padding-left: 20px;">
        @(Html.Bootstrap().ActionLinkButton("Pagos a cuenta venta", "VerAcvsVigentes").RouteValues(new { id = Model.Codigo }).Class("btn-info  btn-small"))
    </div>
   }
}


<div class="clear-both"></div>


<div class="display-label ">
    @Html.LabelForRequired(model => model.Observaciones)
</div>
<div class="editor-field editor-field-xxlarge">
    @Html.TextAreaOrDisplayFor(model => model.Observaciones, modoConsulta, new { style = "width: 530px; height: 60px" })
    @Html.ValidationMessageFor(model => model.Observaciones)
</div>
<div class="clear-both"></div>

<div class="espacio2"></div>
