@model AutomotoraWeb.Models.ListadoChequesEmitidosModel
@using System.Web.UI.WebControls;
@using AutomotoraWeb.Helpers;
@using AutomotoraWeb.Controllers.Bank;
@using AutomotoraWeb.Models;
@using AutomotoraWeb.Controllers.General;
@using DLL_Backend;

@{
    InfoGrilla ig = new InfoGrilla();

    ig.VisibleColumns = new List<ColumnaGrilla>() { 
        new ColumnaGrilla {Campo="Cuenta.Banco", Titulo="Banco", Ancho=100},
        new ColumnaGrilla {Campo="Cuenta.Numero", Titulo="Cuenta", Ancho=70},
            new ColumnaGrilla {Campo="Numero", LargoMax=15, Ancho=70},
            new ColumnaGrilla {Campo="FechaEmision", Ancho=90, Titulo="F.Emision"},
            new ColumnaGrilla {Campo="FechaVencimiento", Titulo="Vencimiento", Ancho=100}
    };
    if (Model.Resultado.Total.Monto>0){
        //si vino en una moneda diferente a default, es porque hay solo una moneda, ya que si hay mas de una viene en moneda default. La puedo sumar
        if (Model.Resultado.Total.Moneda.Codigo!=Moneda.MonedaDefault.Codigo){
            ig.VisibleColumns.Add(new ColumnaGrilla { Campo = "Importe.Monto", Formato = "#,##0.00", Titulo = "Importe " + Model.Resultado.Total.Moneda.Simbolo, TotalSuma = true, Ancho = 120 });
            ig.VisibleColumns.Add(new ColumnaGrilla {Campo="Importe.ImporteEnMonedaDefaultProp.Monto",Formato="#,##0.00", Titulo="Importe "+ Moneda.MonedaDefault.Simbolo, TotalSuma=true, Ancho=120});
        }else{
            //si vino en moneda default es porque habia mas de una o porque se pidio asi:
            if (Model.FiltrarMoneda || Model.FiltrarCuenta){
                //Asi es porque se pidio con filtro de moneda o de cuenta que  tiene moneda (el caso de contradiccion se elimina si no hay saldo
                ig.VisibleColumns.Add(new ColumnaGrilla {Campo="Importe.ImporteEnMonedaDefaultProp.Monto",Formato="#,##0.00", Titulo="Importe "+ Moneda.MonedaDefault.Simbolo, TotalSuma=true, Ancho=120});
            }else{
                //es porque hay mas de una moneda involucrada, no se puede sumar la columna original, solo la convertida
                 ig.VisibleColumns.Add(new ColumnaGrilla {Campo="Importe", Titulo="Importe", Ancho=150});
                 ig.VisibleColumns.Add(new ColumnaGrilla {Campo="Importe.ImporteEnMonedaDefaultProp.Monto",Formato="#,##0.00", Titulo="Importe "+ Moneda.MonedaDefault.Simbolo, TotalSuma=true, Ancho=120});
            }
        }
    }
    ig.VisibleColumns.AddRange(
        new List<ColumnaGrilla>() { 
            new ColumnaGrilla {Campo="DescripcionEstado", Titulo="Estado", Ancho=90},
            new ColumnaGrilla {Campo="Observaciones", LargoMax=80, Ancho=200}
        }
    );
             
    ig.NameGrid = "grilla";
    ig.Controller = ChEmitidosController.CONTROLLER;
    ig.ActionCallbackRoute = "listadoGrilla";
    ig.KeyFieldName = "Codigo";
    ig.TypeOfModel = typeof(DLL_Backend.ChequeEmitido.ChequeEmitidoMD);

    ig.AddButton(new BotonGrilla(BaseController.DETAILS, ChEmitidosController.CONTROLLER, "boton-consultar-mf", "Consulta Cheque"));
    ig.AccionesAlComienzo = true;
    ig.DobleClick = true;
    ig.ControladorDobleClick = ChEmitidosController.CONTROLLER;
    ig.AccionDobleClick = BaseController.DETAILS;
    ViewBag.InfoGrilla = ig;    


    ig.FuncionHtmlRowPrepared = (s, e) => {
        if (e.GetValue("FechaVencimiento") == null) {
            return;
        }
        if (((DateTime)e.GetValue("FechaVencimiento")) < DateTime.Now.Date)
            //e.Row.BackColor = System.Drawing.Color.FromArgb(211, 235, 183);
            e.Row.BackColor = System.Drawing.Color.FromArgb(204, 255, 204);
    };
    
}

@Html.Partial("_generalGrid", Model.Resultado.Cheques)
  
